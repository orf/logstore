// Generated by CoffeeScript 1.7.1
(function() {
  var gotWebSocketConnection, messages, num, updateSpeedGraph;

  messages = {
    global_message_rates: (function() {
      var _i, _results;
      _results = [];
      for (num = _i = 0; _i <= 29; num = ++_i) {
        _results.push(0);
      }
      return _results;
    })(),
    event_rates: (function() {
      var _i, _results;
      _results = [];
      for (num = _i = 0; _i <= 29; num = ++_i) {
        _results.push(0);
      }
      return _results;
    })(),
    processed_message: (function() {
      var _i, _results;
      _results = [];
      for (num = _i = 0; _i <= 29; num = ++_i) {
        _results.push(0);
      }
      return _results;
    })()
  };

  $(document).ready(function() {
    return ab.connect("ws://localhost:6062", gotWebSocketConnection, function(code, reason) {
      return console.log("Error connecting to WebSockets: " + reason);
    });
  });

  gotWebSocketConnection = function(session) {
    console.log("Subscribed");
    session.subscribe("logbook/stat/got_log_line", function(uri, event) {
      return updateSpeedGraph("global_message_rates", event);
    }, function(error, desc) {
      return console.log("Error: " + error + " Desc: " + desc);
    });
    session.subscribe("logbook/stat/got_event_hit", function(uri, event) {
      return updateSpeedGraph("event_rates", event);
    }, function(error, desc) {
      return console.log("Error: " + error + " Desc: " + desc);
    });
    return session.subscribe("logbook/stat/processed_message", function(uri, event) {
      return updateSpeedGraph("processed_message", event);
    }, function(error, desc) {
      return console.log("Error: " + error + " Desc: " + desc);
    });
  };

  updateSpeedGraph = function(name, message_rate) {
    messages[name].push(message_rate);
    if (messages[name].length > 30) {
      messages[name] = messages[name].slice(1, 31);
    }
    $("#" + name + "_graph").sparkline(messages[name]);
    return $("#" + name + "_text").text(message_rate);
  };

}).call(this);

//# sourceMappingURL=dashboard.map
