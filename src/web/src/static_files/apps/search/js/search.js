// Generated by CoffeeScript 1.7.1
(function() {
  var displaySearchResults, getSearchResults, getServerNameFromID, gotWebSocketConnection, node, template_func;

  template_func = null;

  $(document).ready(function() {
    var query, template;
    query = $("#search_query").val();
    template = $("#log_template").text();
    template_func = doT.template(template);
    getSearchResults(query).done(function(data) {
      $("#hits").text(data.hits.total);
      $("#took").text(data.took);
      return displaySearchResults(data.hits.hits.reverse());
    });
    ab.connect("ws://localhost:6062", gotWebSocketConnection(query), function(code, reason) {
      return console.log("Error connecting to WebSockets: " + reason);
    });
    return null;
  });

  node = document.getElementById("search_results");

  displaySearchResults = function(results, inc_counter) {
    var child_count, result, _i, _len;
    if (inc_counter == null) {
      inc_counter = false;
    }
    if (inc_counter) {
      $("#hits").text(+$("#hits").text() + 1);
    }
    for (_i = 0, _len = results.length; _i < _len; _i++) {
      result = results[_i];
      $("#search_results").append(template_func({
        item: result,
        getServerName: getServerNameFromID,
        moment: moment
      }));
    }
    child_count = document.querySelectorAll("#search_results > p").length;
    if (child_count > 500) {
      if (results.length === 1) {
        return node.removeChild(node.children[0]);
      }
    }
  };

  gotWebSocketConnection = function(query) {
    return function(session) {
      return session.call("logbook/update#subscribe", query).then(function(result) {
        return session.subscribe("logbook/live/" + result, function(uri, event) {
          return displaySearchResults([event], true);
        }, function(error, desc) {
          return console.log("Error: " + error + " Desc: " + desc);
        });
      });
    };
  };

  getServerNameFromID = function(id) {
    return window.serverNames[id];
  };

  getSearchResults = function(query, size) {
    if (size == null) {
      size = 100;
    }
    return $.get(Django.url("api:search"), {
      query: query,
      size: size
    });
  };

}).call(this);

//# sourceMappingURL=search.map
